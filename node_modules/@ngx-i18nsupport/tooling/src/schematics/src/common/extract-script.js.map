{"version":3,"file":"extract-script.js","sourceRoot":"","sources":["../../../../../../projects/tooling/src/schematics/src/common/extract-script.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * This class contains all informations about the extract i18n script used in a package.json file.\r\n * It can create such a script and can analyze an existing script.\r\n */\r\nimport {extractScriptName} from './constants';\r\nimport {OptionsAfterSetup} from './options-after-setup';\r\n\r\nexport class ExtractScript {\r\n\r\n    private static fullExtractScript(options: OptionsAfterSetup): string {\r\n        const defaultLanguage = options.i18nLocale;\r\n        const i18nFormat = options.i18nFormat;\r\n        const languagesBlankSeparated = options.languages ? options.languages.replace(/,/g, ' ') : '';\r\n        const languagesCommandLineArgument = (options.useComandlineForLanguages) ? ' ' + languagesBlankSeparated : '';\r\n        const baseOutputPath = (options.isDefaultProject) ? '' : 'src/';\r\n        const localeDir = options.localePath ? `${baseOutputPath}${options.localePath}` : baseOutputPath;\r\n        if (options.useXliffmergeBuilder) {\r\n            return `ng xi18n ${options.project} --i18n-format ${i18nFormat} --output-path ${localeDir} --i18n-locale ${defaultLanguage}\\\r\n && ng run ${options.project}:xliffmerge`;\r\n        } else {\r\n            // old style before builder\r\n            const configFilePath = 'xliffmerge.json';\r\n            return `ng xi18n ${options.project} --i18n-format ${i18nFormat} --output-path ${localeDir} --i18n-locale ${defaultLanguage}\\\r\n && xliffmerge --profile ${configFilePath}${languagesCommandLineArgument}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the script.\r\n     */\r\n    static createExtractScript(options: OptionsAfterSetup): ExtractScript {\r\n        return new ExtractScript(extractScriptName(options.project, options.isDefaultProject), ExtractScript.fullExtractScript(options));\r\n    }\r\n\r\n    constructor(private _name: string, private _content: string) {\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get content(): string {\r\n        return this._content;\r\n    }\r\n\r\n    public usesXliffmergeCommandline(): boolean {\r\n        return /&& xliffmerge/.test(this.content);\r\n    }\r\n\r\n    public usesXliffmergeBuilder(): boolean {\r\n        return /&& ng run .*:xliffmerge/.test(this.content);\r\n    }\r\n\r\n    public xliffmergeProfile(): string|null {\r\n        const match = /&& xliffmerge.*(--profile|-p) ([^ ]*)/.exec(this.content);\r\n        if (match) {\r\n            return match[2];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public projectName(): string|null {\r\n        // Syntax ng xi18n <project>\r\n        const match = /ng xi18n *([^ ]*)/.exec(this.content);\r\n        if (match) {\r\n            return match[1];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse languages from command line.\r\n     * Commandline contains something like xliffmerge [options] lang1 lang2 ...\r\n     * Returns [lang1, lang2, ..]\r\n     * */\r\n    public languages(): string[] {\r\n        const startIndex = this.content.indexOf('&& xliffmerge');\r\n        if (startIndex < 0) {\r\n            return [];\r\n        }\r\n        const languages = [];\r\n        const params = this.content.substr(startIndex + '&& xliffmerge'.length).split(/\\s+/);\r\n        for (let i = 0; i < params.length; i++) {\r\n            const p = params[i];\r\n            if (!p.startsWith('-') && p !== '' && !(i > 0 && (params[i - 1] === '-p' || params[i - 1] === '--profile'))) {\r\n                languages.push(p);\r\n            }\r\n        }\r\n        return languages;\r\n    }\r\n}\r\n"]}