{"version":3,"file":"special-strings.js","sourceRoot":"","sources":["../../../../../../projects/tooling/src/schematics/schematics-core/utility/special-strings.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH;;;;;GAKG;AACH,SAAgB,2BAA2B,CAAC,kBAA0B;IAClE,IAAI,CAAC,kBAAkB,EAAE;QACrB,OAAO,IAAI,CAAC;KACf;IACD,MAAM,MAAM,GAAa,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;SAC1B;QACD,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC3C;IACD,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;IACtB,OAAO,MAAM,CAAC;AAClB,CAAC;AAdD,kEAcC;AACD;;;;;GAKG;AACH,SAAgB,aAAa,CAAC,MAAgB;IAC1C,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,IAAI,CAAC;KACf;IACD,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;SAC1B;QACD,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC3C;IACD,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;IACtB,OAAO,MAAM,CAAC;AAClB,CAAC;AAbD,sCAaC","sourcesContent":["/**\r\n * Some additional helper string functions.\r\n */\r\n\r\n/**\r\n * Converts a string that contains comma separated values to a string containing json array syntax.\r\n * Example: commaseparatedToArrayString('en,de') return '[\"en\", \"de\"]'.\r\n * @param commaSeparatedList the list string\r\n * @return the formatted string\r\n */\r\nexport function commaseparatedToArrayString(commaSeparatedList: string): string {\r\n    if (!commaSeparatedList) {\r\n        return '[]';\r\n    }\r\n    const values: string[] = commaSeparatedList.split(',');\r\n    let result = '[';\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (i > 0) {\r\n            result = result + ', ';\r\n        }\r\n        result = result + '\"' + values[i] + '\"';\r\n    }\r\n    result = result + ']';\r\n    return result;\r\n}\r\n/**\r\n * Converts a string[] that contains some values to a string containing json array syntax.\r\n * Example: toArrayString(['en', 'de']) return '[\"en\", \"de\"]'.\r\n * @param values the strings to be formatted\r\n * @return the formatted string\r\n */\r\nexport function toArrayString(values: string[]): string {\r\n    if (!values) {\r\n        return '[]';\r\n    }\r\n    let result = '[';\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (i > 0) {\r\n            result = result + ', ';\r\n        }\r\n        result = result + '\"' + values[i] + '\"';\r\n    }\r\n    result = result + ']';\r\n    return result;\r\n}\r\n"]}