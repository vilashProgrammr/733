{"version":3,"file":"translation-messages-file-reader.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/translation-messages-file-reader.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,8EAA8G;AAC9G,mDAA6C;AAC7C,6CAAuC;AAEvC;;GAEG;AACH,MAAa,6BAA6B;IAEtC;;;;;;;OAOG;IACI,MAAM,CAAC,QAAQ,CAAC,UAAkB,EAClB,IAAY,EACZ,QAAgB,EAChB,sBAA+B;QAClD,MAAM,UAAU,GAAG,sBAAS,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChE,MAAM,cAAc,GAAG,6BAA6B,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;QACzG,OAAO,oDAA8B,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IACrI,CAAC;IAED;;;;;;OAMG;IACI,MAAM,CAAC,qBAAqB,CAAC,IAAY,EACZ,QAAgB,EAChB,sBAA+B;QAC/D,MAAM,UAAU,GAAG,sBAAS,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChE,MAAM,cAAc,GAAG,6BAA6B,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;QACzG,OAAO,oDAA8B,CAAC,4BAA4B,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IACtI,CAAC;IAED;;;;;OAKG;IACK,MAAM,CAAC,iBAAiB,CAAC,sBAA8B,EAAE,QAAgB;QAE7E,IAAI,sBAAsB,EAAE;YACxB,MAAM,gBAAgB,GAAG,sBAAS,CAAC,kBAAkB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;YACxF,OAAO;gBACH,UAAU,EAAE,gBAAgB,CAAC,OAAO;gBACpC,IAAI,EAAE,sBAAsB;gBAC5B,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;aACtC,CAAC;SACL;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CAAC,IAAI,CAAC,YAAsC,EAAE,cAAwB;QAC/E,oBAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1H,CAAC;CACJ;AAjED,sEAiEC","sourcesContent":["/**\r\n * Created by roobm on 21.03.2017.\r\n */\r\nimport {TranslationMessagesFileFactory, ITranslationMessagesFile} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {FileUtil} from '../common/file-util';\r\nimport {XmlReader} from './xml-reader';\r\n\r\n/**\r\n * Helper class to read translation files depending on format.\r\n */\r\nexport class TranslationMessagesFileReader {\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat format\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    public static fromFile(i18nFormat: string,\r\n                           path: string,\r\n                           encoding: string,\r\n                           optionalMasterFilePath?: string): ITranslationMessagesFile {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromFileContent(i18nFormat, xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    public static fromUnknownFormatFile(path: string,\r\n                                        encoding: string,\r\n                                        optionalMasterFilePath?: string): ITranslationMessagesFile {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromUnknownFormatFileContent(xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read master xmb file\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @param encoding encoding\r\n     * @return content and encoding of file\r\n     */\r\n    private static masterFileContent(optionalMasterFilePath: string, encoding: string)\r\n        : {xmlContent: string, path: string, encoding: string} {\r\n        if (optionalMasterFilePath) {\r\n            const masterXmlContent = XmlReader.readXmlFileContent(optionalMasterFilePath, encoding);\r\n            return {\r\n                xmlContent: masterXmlContent.content,\r\n                path: optionalMasterFilePath,\r\n                encoding: masterXmlContent.encoding\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save edited file.\r\n     * @param messagesFile messagesFile\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    public static save(messagesFile: ITranslationMessagesFile, beautifyOutput?: boolean) {\r\n        FileUtil.replaceContent(messagesFile.filename(), messagesFile.editedContent(beautifyOutput), messagesFile.encoding());\r\n    }\r\n}\r\n\r\n"]}