{
  "version": 3,
  "file": "logger.utils.js",
  "sources": [
    "ng://ngx-logger/src/lib/utils/logger.utils.ts"
  ],
  "sourcesContent": [
    "import {NgxLoggerLevel} from '../types/logger-level.enum';\n\nexport class NGXLoggerUtils {\n\n  static prepareMetaString(timestamp: string, logLevel: string, fileName: string, lineNumber: string) {\n    const fileDetails = fileName ? ` [${fileName}:${lineNumber}]` : '';\n\n    return `${timestamp} ${logLevel}${fileDetails}`;\n  }\n\n  static getColor(level: NgxLoggerLevel): 'blue' | 'teal' | 'gray' | 'red' | undefined {\n    switch (level) {\n      case NgxLoggerLevel.TRACE:\n        return 'blue';\n      case NgxLoggerLevel.DEBUG:\n        return 'teal';\n      case NgxLoggerLevel.INFO:\n      case NgxLoggerLevel.LOG:\n        return 'gray';\n      case NgxLoggerLevel.WARN:\n      case NgxLoggerLevel.ERROR:\n        return 'red';\n      case NgxLoggerLevel.OFF:\n      default:\n        return;\n    }\n  }\n\n\n\n  /**\n   *  This allows us to see who called the logger\n   *  @return {string}\n   *  @private\n   */\n  static getCallerDetails(): {lineNumber: string, fileName: string} {\n    const err = (new Error(''));\n\n    try {\n      // this should produce the line which NGX Logger was called\n      const callerLine = err.stack.split('\\n')[4].split('/');\n\n      // returns the file:lineNumber\n      const fileLineNumber = callerLine[callerLine.length - 1].replace(/[)]/g, '').split(':');\n\n      return {\n        fileName: fileLineNumber[0],\n        lineNumber: fileLineNumber[1]\n      }\n    } catch(e) {\n      return {\n        fileName: null,\n        lineNumber: null\n      }\n    }\n\n  }\n\n  static prepareMessage(message) {\n    try {\n       if (typeof message !== 'string' && !(message instanceof Error)) {\n        message = JSON.stringify(message, null, 2);\n      }\n    } catch (e) {\n      // additional = [message, ...additional];\n      message = 'The provided \"message\" value could not be parsed with JSON.stringify().';\n    }\n\n    return message;\n  }\n\n  static prepareAdditionalParameters(additional: any[]) {\n    if (additional === null || additional === undefined) {\n      return null;\n    }\n\n    return additional.map((next, idx) => {\n      try {\n        // We just want to make sure the JSON can be parsed, we do not want to actually change the type\n        if (typeof next === 'object') {\n          JSON.stringify(next)\n        }\n\n        return next;\n      } catch (e) {\n        return `The additional[${idx}] value could not be parsed using JSON.stringify().`\n      }\n    });\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
