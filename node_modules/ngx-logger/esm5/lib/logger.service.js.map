{
  "version": 3,
  "file": "logger.service.js",
  "sources": [
    "ng://ngx-logger/src/lib/logger.service.ts"
  ],
  "sourcesContent": [
    "import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NGXLoggerHttpService} from './http.service';\nimport {NgxLoggerLevel} from './types/logger-level.enum';\nimport {LoggerConfig} from './logger.config';\nimport {NGXLoggerConfigEngine} from './config.engine';\nimport {NGXLoggerUtils} from './utils/logger.utils';\nimport {HttpMetaDataInterface} from './types/http-meta-data.interface';\n\nexport const Levels = [\n  'TRACE',\n  'DEBUG',\n  'INFO',\n  'LOG',\n  'WARN',\n  'ERROR',\n  'OFF'\n];\n\n\n@Injectable()\nexport class NGXLogger {\n  private _isIE: boolean;\n  private configService: NGXLoggerConfigEngine;\n\n\n  constructor(private readonly httpService: NGXLoggerHttpService, loggerConfig: LoggerConfig,\n              @Inject(PLATFORM_ID) private readonly platformId) {\n    this._isIE = isPlatformBrowser(platformId) &&\n      !!(navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident\\//) || navigator.userAgent.match(/Edge\\//));\n\n    // each instance of the logger should have their own config engine\n    this.configService = new NGXLoggerConfigEngine(loggerConfig);\n  }\n\n  public trace(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.TRACE, message, additional);\n  }\n\n  public debug(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.DEBUG, message, additional);\n  }\n\n  public info(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.INFO, message, additional);\n  }\n\n  public log(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.LOG, message, additional);\n  }\n\n  public warn(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.WARN, message, additional);\n  }\n\n  public error(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.ERROR, message, additional);\n  }\n\n  public updateConfig(config: LoggerConfig) {\n    this.configService.updateConfig(config);\n  }\n\n  private _logIE(level: NgxLoggerLevel, metaString: string, message: string, additional: any[]): void {\n\n    // make sure additional isn't null or undefined so that ...additional doesn't error\n    additional = additional || [];\n\n    switch (level) {\n      case NgxLoggerLevel.WARN:\n        console.warn(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.ERROR:\n        console.error(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.INFO:\n        console.info(`${metaString} `, message, ...additional);\n        break;\n      default:\n        console.log(`${metaString} `, message, ...additional);\n    }\n  }\n\n  private _log(level: NgxLoggerLevel, message, additional: any[] = [], logOnServer: boolean = true): void {\n    if (!message) {\n      return;\n    }\n\n    const logLevelString = Levels[level];\n\n    message = NGXLoggerUtils.prepareMessage(message);\n\n    // only use validated parameters for HTTP requests\n    const validatedAdditionalParameters = NGXLoggerUtils.prepareAdditionalParameters(additional);\n\n    const timestamp = new Date().toISOString();\n    const config = this.configService.getConfig();\n\n    const callerDetails = NGXLoggerUtils.getCallerDetails();\n\n    if (logOnServer && config.serverLoggingUrl && level >= config.serverLogLevel) {\n\n      const metaData: HttpMetaDataInterface = {\n        level: level,\n        timestamp: timestamp,\n        fileName: callerDetails.fileName,\n        lineNumber: callerDetails.lineNumber,\n      };\n\n      // make sure the stack gets sent to the server\n      message = message instanceof Error ? message.stack : message;\n\n      // Allow logging on server even if client log level is off\n      this.httpService.logOnServer(config.serverLoggingUrl, message, validatedAdditionalParameters, metaData).subscribe((res: any) => {\n          // I don't think we should do anything on success\n        },\n        (error: HttpErrorResponse) => {\n          this._log(NgxLoggerLevel.ERROR, `FAILED TO LOG ON SERVER: ${message}`, [error], false);\n        }\n      );\n    }\n\n\n    // if no message or the log level is less than the environ\n    if (level < config.level) {\n      return;\n    }\n\n    const metaString = NGXLoggerUtils.prepareMetaString(timestamp, logLevelString, callerDetails.fileName, callerDetails.lineNumber);\n\n    // Coloring doesn't work in IE\n    if (this._isIE) {\n      return this._logIE(level, metaString, message, additional);\n    }\n\n    const color = NGXLoggerUtils.getColor(level);\n\n    console.log(`%c${metaString}`, `color:${color}`, message, ...(additional || []));\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
