{
  "version": 3,
  "file": "ngx-logger.umd.min.js",
  "sources": [
    "ng://ngx-logger/node_modules/tslib/tslib.es6.js",
    "ng://ngx-logger/out/lib/http.service.ts",
    "ng://ngx-logger/out/lib/types/logger-level.enum.ts",
    "ng://ngx-logger/out/lib/logger.config.ts",
    "ng://ngx-logger/out/lib/config.engine.ts",
    "ng://ngx-logger/out/lib/utils/logger.utils.ts",
    "ng://ngx-logger/out/lib/logger.service.ts",
    "ng://ngx-logger/out/lib/custom-logger.service.ts",
    "ng://ngx-logger/out/lib/logger-monitor.ts",
    "ng://ngx-logger/out/lib/types/ngx-log.interface.ts",
    "ng://ngx-logger/out/lib/logger.module.ts",
    "ng://ngx-logger/out/lib/testing/logger.service.mock.ts",
    "ng://ngx-logger/out/lib/testing/custom-logger.service.mock.ts",
    "ng://ngx-logger/out/lib/testing/http.service.mock.ts",
    "ng://ngx-logger/out/lib/testing/logger-testing.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NGXLogInterface } from './types/ngx-log.interface';\n\n\n\n@Injectable()\nexport class NGXLoggerHttpService {\n  constructor(private readonly http: HttpClient) { }\n\n  logOnServer(url: string, log: NGXLogInterface, options: object): Observable<any> {\n    return this.http.post(url, log, options || {});\n  }\n\n}\n",
    "export enum NgxLoggerLevel {\n  TRACE = 0,\n  DEBUG,\n  INFO,\n  LOG,\n  WARN,\n  ERROR,\n  FATAL,\n  OFF\n}\n",
    "import {NgxLoggerLevel} from './types/logger-level.enum';\n\nexport class LoggerConfig {\n  level: NgxLoggerLevel;\n  serverLogLevel?: NgxLoggerLevel;\n  serverLoggingUrl?: string;\n  disableConsoleLogging?: boolean;\n  httpResponseType?: 'arraybuffer' | 'blob' | 'text' | 'json';\n}\n",
    "import {LoggerConfig} from './logger.config';\n\nexport class NGXLoggerConfigEngine {\n\n  private _config;\n  constructor(readonly config: LoggerConfig) {\n    this._config = config;\n  }\n\n  updateConfig(config: LoggerConfig) {\n    this._config = this._clone(config);\n  }\n\n  getConfig() {\n    return this._clone(this._config);\n  }\n\n\n  // TODO: add tests around cloning the config. updating an object passed into the config (or retrieving from the config)\n  // should not update the active config, this is a shallow clone. If our config ever becomes hierarchical we must make\n  // this a deep clone\n  private _clone(object: any) {\n    const cloneConfig: LoggerConfig = new LoggerConfig();\n\n    Object.keys(object).forEach((key) => {\n      cloneConfig[key] = object[key];\n    });\n\n    return cloneConfig;\n  }\n}\n",
    "import {NgxLoggerLevel} from '../types/logger-level.enum';\n\nexport class NGXLoggerUtils {\n\n  static prepareMetaString(timestamp: string, logLevel: string, fileName: string, lineNumber: string) {\n    const fileDetails = fileName ? ` [${fileName}:${lineNumber}]` : '';\n\n    return `${timestamp} ${logLevel}${fileDetails}`;\n  }\n\n  static getColor(level: NgxLoggerLevel): 'blue' | 'teal' | 'gray' | 'red' | undefined {\n    switch (level) {\n      case NgxLoggerLevel.TRACE:\n        return 'blue';\n      case NgxLoggerLevel.DEBUG:\n        return 'teal';\n      case NgxLoggerLevel.INFO:\n      case NgxLoggerLevel.LOG:\n        return 'gray';\n      case NgxLoggerLevel.WARN:\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        return 'red';\n      case NgxLoggerLevel.OFF:\n      default:\n        return;\n    }\n  }\n\n\n  /**\n   *  This allows us to see who called the logger\n   */\n  static getCallerDetails(): { lineNumber: string, fileName: string } {\n    const err = (new Error(''));\n\n    try {\n      // this should produce the line which NGX Logger was called\n      const callerLine = err.stack.split('\\n')[4].split('/');\n\n      // returns the file:lineNumber\n      const fileLineNumber = callerLine[callerLine.length - 1].replace(/[)]/g, '').split(':');\n\n      return {\n        fileName: fileLineNumber[0],\n        lineNumber: fileLineNumber[1]\n      };\n    } catch (e) {\n      return {\n        fileName: null,\n        lineNumber: null\n      };\n    }\n\n  }\n\n  static prepareMessage(message) {\n    try {\n      if (typeof message !== 'string' && !(message instanceof Error)) {\n        message = JSON.stringify(message, null, 2);\n      }\n    } catch (e) {\n      // additional = [message, ...additional];\n      message = 'The provided \"message\" value could not be parsed with JSON.stringify().';\n    }\n\n    return message;\n  }\n\n  static prepareAdditionalParameters(additional: any[]) {\n    if (additional === null || additional === undefined) {\n      return null;\n    }\n\n    return additional.map((next, idx) => {\n      try {\n        // We just want to make sure the JSON can be parsed, we do not want to actually change the type\n        if (typeof next === 'object') {\n          JSON.stringify(next);\n        }\n\n        return next;\n      } catch (e) {\n        return `The additional[${idx}] value could not be parsed using JSON.stringify().`;\n      }\n    });\n  }\n\n}\n",
    "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { NGXLoggerHttpService } from './http.service';\nimport { NgxLoggerLevel } from './types/logger-level.enum';\nimport { LoggerConfig } from './logger.config';\nimport { NGXLoggerConfigEngine } from './config.engine';\nimport { NGXLoggerUtils } from './utils/logger.utils';\nimport { NGXLoggerMonitor } from './logger-monitor';\nimport { NGXLogInterface } from './types/ngx-log.interface';\n\nexport const Levels = [\n  'TRACE',\n  'DEBUG',\n  'INFO',\n  'LOG',\n  'WARN',\n  'ERROR',\n  'FATAL',\n  'OFF'\n];\n\n\n@Injectable()\nexport class NGXLogger {\n  private readonly _isIE: boolean;\n  private readonly _logFunc: Function;\n  private config: NGXLoggerConfigEngine;\n  private _customHttpHeaders: HttpHeaders;\n  private _customParams: HttpParams;\n\n  private _loggerMonitor: NGXLoggerMonitor;\n\n  constructor(private readonly httpService: NGXLoggerHttpService, loggerConfig: LoggerConfig,\n    @Inject(PLATFORM_ID) private readonly platformId) {\n    this._isIE = isPlatformBrowser(platformId) &&\n      !!(navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident\\//) || navigator.userAgent.match(/Edge\\//));\n\n    // each instance of the logger should have their own config engine\n    this.config = new NGXLoggerConfigEngine(loggerConfig);\n\n    this._logFunc = this._isIE ? this._logIE.bind(this) : this._logModern.bind(this);\n\n  }\n\n  public trace(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.TRACE, message, additional);\n  }\n\n  public debug(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.DEBUG, message, additional);\n  }\n\n  public info(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.INFO, message, additional);\n  }\n\n  public log(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.LOG, message, additional);\n  }\n\n  public warn(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.WARN, message, additional);\n  }\n\n  public error(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.ERROR, message, additional);\n  }\n\n  public fatal(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.FATAL, message, additional);\n  }\n\n  public setCustomHttpHeaders(headers: HttpHeaders) {\n    this._customHttpHeaders = headers;\n  }\n\n  public setCustomParams(params: HttpParams) {\n    this._customParams = params;\n  }\n\n  public registerMonitor(monitor: NGXLoggerMonitor) {\n    this._loggerMonitor = monitor;\n  }\n\n  public updateConfig(config: LoggerConfig) {\n    this.config.updateConfig(config);\n  }\n\n  public getConfigSnapshot(): LoggerConfig {\n    return this.config.getConfig();\n  }\n\n  private _logIE(level: NgxLoggerLevel, metaString: string, message: string, additional: any[]): void {\n\n    // Coloring doesn't work in IE\n    // make sure additional isn't null or undefined so that ...additional doesn't error\n    additional = additional || [];\n\n    switch (level) {\n      case NgxLoggerLevel.WARN:\n        console.warn(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        console.error(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.INFO:\n        console.info(`${metaString} `, message, ...additional);\n        break;\n      default:\n        console.log(`${metaString} `, message, ...additional);\n    }\n  }\n\n  private _logModern(level: NgxLoggerLevel, metaString: string, message: string, additional: any[]): void {\n\n    const color = NGXLoggerUtils.getColor(level);\n\n    // make sure additional isn't null or undefined so that ...additional doesn't error\n    additional = additional || [];\n\n    switch (level) {\n      case NgxLoggerLevel.WARN:\n        console.warn(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        console.error(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      case NgxLoggerLevel.INFO:\n        console.info(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      //  Disabling console.trace since the stack trace is not helpful. it is showing the stack trace of\n      // the console.trace statement\n      // case NgxLoggerLevel.TRACE:\n      //   console.trace(`%c${metaString}`, `color:${color}`, message, ...additional);\n      //   break;\n\n      //  Disabling console.debug, because Has this hidden by default.\n      // case NgxLoggerLevel.DEBUG:\n      //   console.debug(`%c${metaString}`, `color:${color}`, message, ...additional);\n      //   break;\n      default:\n        console.log(`%c${metaString}`, `color:${color}`, message, ...additional);\n    }\n  }\n\n  private _log(level: NgxLoggerLevel, message, additional: any[] = [], logOnServer: boolean = true): void {\n    const config = this.config.getConfig();\n    const isLog2Server = logOnServer && config.serverLoggingUrl && level >= config.serverLogLevel;\n    const isLogLevelEnabled = level >= config.level;\n\n    if (!(message && (isLog2Server || isLogLevelEnabled))) {\n      return;\n    }\n\n    const logLevelString = Levels[level];\n\n    message = NGXLoggerUtils.prepareMessage(message);\n\n    // only use validated parameters for HTTP requests\n    const validatedAdditionalParameters = NGXLoggerUtils.prepareAdditionalParameters(additional);\n\n    const timestamp = new Date().toISOString();\n\n    const callerDetails = NGXLoggerUtils.getCallerDetails();\n\n    const logObject: NGXLogInterface = {\n      message: message,\n      additional: validatedAdditionalParameters,\n      level: level,\n      timestamp: timestamp,\n      fileName: callerDetails.fileName,\n      lineNumber: callerDetails.lineNumber\n    };\n\n    if (this._loggerMonitor && isLogLevelEnabled) {\n      this._loggerMonitor.onLog(logObject);\n    }\n\n    if (isLog2Server) {\n      // make sure the stack gets sent to the server\n      message = message instanceof Error ? message.stack : message;\n      logObject.message = message;\n\n      const headers = this._customHttpHeaders || new HttpHeaders();\n      headers.set('Content-Type', 'application/json');\n\n      const options = {\n        headers: headers,\n        params: this._customParams || new HttpParams(),\n        responseType: config.httpResponseType || 'json'\n      };\n      // Allow logging on server even if client log level is off\n      this.httpService.logOnServer(config.serverLoggingUrl, logObject, options).subscribe((res: any) => {\n        // I don't think we should do anything on success\n      },\n        (error: HttpErrorResponse) => {\n          this._log(NgxLoggerLevel.ERROR, `FAILED TO LOG ON SERVER: ${message}`, [error], false);\n        }\n      );\n    }\n\n\n    // if no message or the log level is less than the environ\n    if (isLogLevelEnabled && !config.disableConsoleLogging) {\n      const metaString = NGXLoggerUtils.prepareMetaString(timestamp, logLevelString, callerDetails.fileName, callerDetails.lineNumber);\n\n      return this._logFunc(level, metaString, message, additional);\n    }\n\n  }\n}\n",
    "import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\n\nimport {LoggerConfig} from './logger.config';\nimport {NGXLoggerHttpService} from './http.service';\nimport {NGXLogger} from './logger.service';\nimport {NGXLoggerMonitor} from './logger-monitor';\n\n\n/**\n * CustomNGXLoggerService is designed to allow users to get a new instance of a logger\n */\n@Injectable()\nexport class CustomNGXLoggerService {\n\n  constructor(private readonly httpService: NGXLoggerHttpService,\n              @Inject(PLATFORM_ID) private readonly platformId) {\n  }\n\n  create(config: LoggerConfig, httpService?: NGXLoggerHttpService, logMonitor?: NGXLoggerMonitor): NGXLogger {\n    // you can inject your own httpService or use the default,\n    const logger = new NGXLogger(httpService || this.httpService, config, this.platformId);\n\n    if (logMonitor) {\n      logger.registerMonitor(logMonitor);\n    }\n\n    return logger;\n  }\n}\n\n\n",
    "import {NGXLogInterface} from './types/ngx-log.interface';\n\nexport abstract class NGXLoggerMonitor {\n  abstract onLog(logObject: NGXLogInterface): void;\n}\n",
    "import {NgxLoggerLevel} from './logger-level.enum';\n\nexport class NGXLogInterface {\n  level: NgxLoggerLevel;\n  timestamp: string;\n  fileName: string;\n  lineNumber: string;\n  message: string;\n  additional: any[];\n}\n",
    "import {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NGXLogger} from './logger.service';\nimport {LoggerConfig} from './logger.config';\nimport {CustomNGXLoggerService} from './custom-logger.service';\nimport {NGXLoggerHttpService} from './http.service';\n\nexport * from './logger.service';\n\nexport * from './logger.config';\n\nexport * from './custom-logger.service';\n\nexport * from './logger-monitor';\n\nexport * from './http.service';\n\nexport * from './utils/logger.utils';\nexport * from './types/logger-level.enum';\nexport * from './types/ngx-log.interface';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    NGXLogger,\n    NGXLoggerHttpService,\n    CustomNGXLoggerService\n  ]\n})\nexport class LoggerModule {\n  static forRoot(config: LoggerConfig | null | undefined): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        {provide: LoggerConfig, useValue: config || {}},\n        NGXLogger,\n        NGXLoggerHttpService,\n        CustomNGXLoggerService\n      ]\n    };\n  }\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        NGXLogger,\n        NGXLoggerHttpService,\n        CustomNGXLoggerService\n      ]\n    };\n  }\n}\n",
    "import {HttpHeaders, HttpParams} from '@angular/common/http';\nimport {NGXLoggerMonitor} from '../logger-monitor';\nimport {LoggerConfig} from '../logger.config';\n\nexport class NGXLoggerMock {\n\n  constructor() {\n  }\n\n  trace(message: any, ...additional: any[]) {\n  }\n\n  debug(message: any, ...additional: any[]) {\n  }\n\n  info(message: any, ...additional: any[]) {\n  }\n\n  log(message: any, ...additional: any[]) {\n  }\n\n  warn(message: any, ...additional: any[]) {\n  }\n\n  error(message: any, ...additional: any[]) {\n  }\n\n  fatal(message: any, ...additional: any[]) {\n  }\n\n  updateConfig(config: any) {\n\n  }\n\n  setCustomHttpHeaders(headers: HttpHeaders) {\n  }\n\n  setCustomParams(params: HttpParams) {\n  }\n\n  registerMonitor(monitor: NGXLoggerMonitor) {\n  }\n\n  getConfigSnapshot(): LoggerConfig {\n    return new LoggerConfig();\n  }\n}\n",
    "import {NGXLoggerMock} from './logger.service.mock';\n\n/**\n * CustomNGXLoggerServiceMock is a mock for CustomNGXLoggerService\n */\nexport class CustomNGXLoggerServiceMock {\n\n  constructor() {\n  }\n\n  create(): NGXLoggerMock {\n    // you can inject your own httpService or use the default,\n    return new NGXLoggerMock();\n  }\n}\n\n\n",
    "import {Observable, of} from 'rxjs';\n\nexport class NGXLoggerHttpServiceMock {\n  constructor() {\n\n  }\n\n  logOnServer(url: string, message: string, additional: any[], timestamp: string, logLevel: string): Observable<any> {\n    return of({})\n  }\n}\n",
    "import {NgModule} from '@angular/core';\n\nimport {NGXLogger} from '../logger.service';\nimport {NGXLoggerMock} from './logger.service.mock';\nimport {NGXLoggerHttpService} from '../http.service';\nimport {NGXLoggerHttpServiceMock} from './http.service.mock';\nimport {CustomNGXLoggerService} from '../custom-logger.service';\nimport {CustomNGXLoggerServiceMock} from './custom-logger.service.mock';\n\n@NgModule({\n  providers: [\n    {provide: NGXLogger, useClass: NGXLoggerMock},\n    {provide: NGXLoggerHttpService, useClass: NGXLoggerHttpServiceMock},\n    {provide: CustomNGXLoggerService, useClass: CustomNGXLoggerServiceMock},\n  ]\n})\nexport class LoggerTestingModule {\n}\n"
  ],
  "names": [
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "__spread",
    "arguments",
    "length",
    "concat",
    "NGXLoggerHttpService",
    "http",
    "this",
    "prototype",
    "logOnServer",
    "url",
    "log",
    "options",
    "post",
    "type",
    "Injectable",
    "HttpClient",
    "TRACE",
    "DEBUG",
    "INFO",
    "LOG",
    "WARN",
    "ERROR",
    "FATAL",
    "OFF",
    "LoggerConfig",
    "NGXLoggerConfigEngine",
    "config",
    "_config",
    "updateConfig",
    "_clone",
    "getConfig",
    "object",
    "cloneConfig",
    "Object",
    "keys",
    "forEach",
    "key",
    "NGXLoggerUtils",
    "prepareMetaString",
    "timestamp",
    "logLevel",
    "fileName",
    "lineNumber",
    "getColor",
    "level",
    "NgxLoggerLevel",
    "getCallerDetails",
    "err",
    "Error",
    "callerLine",
    "stack",
    "split",
    "fileLineNumber",
    "replace",
    "prepareMessage",
    "message",
    "JSON",
    "stringify",
    "prepareAdditionalParameters",
    "additional",
    "undefined",
    "map",
    "idx",
    "Levels",
    "NGXLogger",
    "httpService",
    "loggerConfig",
    "platformId",
    "_isIE",
    "isPlatformBrowser",
    "navigator",
    "userAgent",
    "indexOf",
    "match",
    "_logFunc",
    "_logIE",
    "bind",
    "_logModern",
    "trace",
    "_i",
    "_log",
    "debug",
    "info",
    "warn",
    "fatal",
    "setCustomHttpHeaders",
    "headers",
    "_customHttpHeaders",
    "setCustomParams",
    "params",
    "_customParams",
    "registerMonitor",
    "monitor",
    "_loggerMonitor",
    "getConfigSnapshot",
    "metaString",
    "console",
    "apply",
    "color",
    "_this",
    "isLog2Server",
    "serverLoggingUrl",
    "serverLogLevel",
    "isLogLevelEnabled",
    "logLevelString",
    "validatedAdditionalParameters",
    "Date",
    "toISOString",
    "callerDetails",
    "logObject",
    "onLog",
    "HttpHeaders",
    "set",
    "HttpParams",
    "responseType",
    "httpResponseType",
    "subscribe",
    "res",
    "disableConsoleLogging",
    "decorators",
    "Inject",
    "args",
    "PLATFORM_ID",
    "CustomNGXLoggerService",
    "create",
    "logMonitor",
    "logger",
    "NGXLoggerMonitor",
    "NGXLogInterface",
    "LoggerModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "forChild",
    "NgModule",
    "imports",
    "CommonModule",
    "HttpClientModule",
    "NGXLoggerMock",
    "CustomNGXLoggerServiceMock",
    "NGXLoggerHttpServiceMock",
    "of",
    "LoggerTestingModule",
    "useClass"
  ],
  "mappings": "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"
}
