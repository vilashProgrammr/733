"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("../common");
var reflect_1 = require("../common/reflect");
var cache = new Map();
function MockDirectives() {
    var directives = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        directives[_i] = arguments[_i];
    }
    return directives.map(MockDirective);
}
exports.MockDirectives = MockDirectives;
function MockDirective(directive) {
    var cacheHit = cache.get(directive);
    if (cacheHit) {
        return cacheHit;
    }
    var _a = reflect_1.directiveResolver.resolve(directive), selector = _a.selector, exportAs = _a.exportAs, inputs = _a.inputs, outputs = _a.outputs;
    var DirectiveMock = (function () {
        function DirectiveMock(element, template, viewContainer) {
            var _this = this;
            this.__element = element;
            this.__template = template;
            this.__viewContainer = viewContainer;
            this.__isStructural = template && viewContainer;
            Object.keys(directive.prototype).forEach(function (method) {
                if (!_this[method]) {
                    _this[method] = function () { };
                }
            });
            (outputs || []).forEach(function (output) {
                _this[output.split(':')[0]] = new core_1.EventEmitter();
            });
            this.__render = function ($implicit, variables) {
                if (viewContainer && template) {
                    viewContainer.clear();
                    viewContainer.createEmbeddedView(template, __assign({}, variables, { $implicit: $implicit }));
                }
            };
        }
        DirectiveMock_1 = DirectiveMock;
        var DirectiveMock_1;
        DirectiveMock = DirectiveMock_1 = __decorate([
            common_1.MockOf(directive),
            core_1.Directive({
                exportAs: exportAs,
                inputs: inputs,
                outputs: outputs,
                providers: [{
                        provide: directive,
                        useExisting: core_1.forwardRef(function () { return DirectiveMock_1; })
                    }],
                selector: selector
            }),
            __param(0, core_1.Optional()),
            __param(1, core_1.Optional()),
            __param(2, core_1.Optional()),
            __metadata("design:paramtypes", [core_1.ElementRef,
                core_1.TemplateRef,
                core_1.ViewContainerRef])
        ], DirectiveMock);
        return DirectiveMock;
    }());
    cache.set(directive, DirectiveMock);
    return DirectiveMock;
}
exports.MockDirective = MockDirective;
//# sourceMappingURL=mock-directive.js.map