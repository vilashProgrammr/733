"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("../common");
var reflect_1 = require("../common/reflect");
function MockPipes() {
    var pipes = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        pipes[_i] = arguments[_i];
    }
    return pipes.map(function (pipe) { return MockPipe(pipe, undefined); });
}
exports.MockPipes = MockPipes;
var defaultTransform = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return undefined;
};
function MockPipe(pipe, transform) {
    if (transform === void 0) { transform = defaultTransform; }
    var pipeName = reflect_1.pipeResolver.resolve(pipe).name;
    var PipeMock = (function () {
        function PipeMock() {
            this.transform = transform || defaultTransform;
        }
        PipeMock = __decorate([
            common_1.MockOf(pipe)
        ], PipeMock);
        return PipeMock;
    }());
    var mockedPipe = core_1.Pipe({ name: pipeName })(PipeMock);
    return mockedPipe;
}
exports.MockPipe = MockPipe;
//# sourceMappingURL=mock-pipe.js.map