"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var CustomFormControlComponent = (function () {
    function CustomFormControlComponent() {
        this.disabled = false;
        this.value = '';
        this.onChange = function (value) { };
        this.onTouched = function () { };
    }
    CustomFormControlComponent_1 = CustomFormControlComponent;
    CustomFormControlComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    CustomFormControlComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    CustomFormControlComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    CustomFormControlComponent.prototype.writeValue = function (value) {
        this.value = value;
    };
    var CustomFormControlComponent_1;
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], CustomFormControlComponent.prototype, "disabled", void 0);
    CustomFormControlComponent = CustomFormControlComponent_1 = __decorate([
        core_1.Component({
            providers: [
                {
                    multi: true,
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return CustomFormControlComponent_1; }),
                }
            ],
            selector: 'custom-form-control',
            template: "\n    <span>{{value}}</span>\n    <button (click)=\"this.onChange('changed')\">Change value</button>\n  ",
        })
    ], CustomFormControlComponent);
    return CustomFormControlComponent;
}());
exports.CustomFormControlComponent = CustomFormControlComponent;
//# sourceMappingURL=custom-form-control.component.js.map