"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var testing_1 = require("@angular/core/testing");
var platform_browser_1 = require("@angular/platform-browser");
var mock_directive_1 = require("../mock-directive");
var mock_render_1 = require("../mock-render");
var mock_helper_1 = require("./mock-helper");
var ExampleDirective = (function () {
    function ExampleDirective() {
        this.someOutput = new core_1.EventEmitter();
    }
    ExampleDirective.prototype.performAction = function (s) {
        return this;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], ExampleDirective.prototype, "exampleDirective", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], ExampleDirective.prototype, "someOutput", void 0);
    __decorate([
        core_1.Input('bah'),
        __metadata("design:type", String)
    ], ExampleDirective.prototype, "something", void 0);
    ExampleDirective = __decorate([
        core_1.Directive({
            exportAs: 'foo',
            selector: '[exampleDirective]'
        })
    ], ExampleDirective);
    return ExampleDirective;
}());
exports.ExampleDirective = ExampleDirective;
var ExampleStructuralDirective = (function () {
    function ExampleStructuralDirective() {
        this.exampleStructuralDirective = true;
    }
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], ExampleStructuralDirective.prototype, "exampleStructuralDirective", void 0);
    ExampleStructuralDirective = __decorate([
        core_1.Directive({
            selector: '[exampleStructuralDirective]'
        })
    ], ExampleStructuralDirective);
    return ExampleStructuralDirective;
}());
exports.ExampleStructuralDirective = ExampleStructuralDirective;
describe('MockHelper:getDirective', function () {
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [
                mock_directive_1.MockDirective(ExampleDirective),
                mock_directive_1.MockDirective(ExampleStructuralDirective),
            ]
        });
    }));
    it('should return right attribute directive', function () {
        var fixture = mock_render_1.MockRender("\n      <div exampleDirective></div>\n    ");
        var debugElement = fixture.debugElement.query(platform_browser_1.By.directive(ExampleDirective));
        var element = debugElement.injector.get(ExampleDirective);
        var elementFromHelper = mock_helper_1.MockHelper.getDirective(fixture.debugElement.query(platform_browser_1.By.css('div')), ExampleDirective);
        expect(elementFromHelper).toBeTruthy();
        if (!elementFromHelper) {
            return;
        }
        expect(elementFromHelper).toBe(element);
    });
    it('should return right structural directive', function () {
        var fixture = mock_render_1.MockRender("\n      <div id=\"example-structural-directive\" *exampleStructuralDirective=\"false\">hi</div>\n    ");
        mock_helper_1.MockHelper.findDirectives(fixture.debugElement, ExampleStructuralDirective)
            .forEach(function (item) {
            item.__render();
        });
        fixture.detectChanges();
        var elementFromHelper = mock_helper_1.MockHelper.getDirective(fixture.debugElement.query(platform_browser_1.By.css('div')), ExampleStructuralDirective);
        expect(elementFromHelper).toBeTruthy();
        if (!elementFromHelper) {
            return;
        }
        expect(elementFromHelper.exampleStructuralDirective).toEqual(false);
    });
});
//# sourceMappingURL=mock-helper.spec.js.map