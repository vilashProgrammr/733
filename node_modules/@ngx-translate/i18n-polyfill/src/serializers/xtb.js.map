{"version":3,"file":"xtb.js","sourceRoot":"","sources":["../../../lib/src/serializers/xtb.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from \"../ast/ast\";\nimport * as i18n from \"../ast/i18n_ast\";\nimport {I18nError} from \"../ast/parse_util\";\nimport {Parser} from \"../ast/parser\";\nimport {getXmlTagDefinition} from \"../ast/xml_tags\";\nimport {I18nMessagesById} from \"./serializer\";\nimport {digest} from \"./digest\";\nimport {xmbMapper} from \"./xmb\";\n\nconst _TRANSLATIONS_TAG = \"translationbundle\";\nconst _TRANSLATION_TAG = \"translation\";\nconst _PLACEHOLDER_TAG = \"ph\";\n\nexport function xtbLoadToI18n(content: string): I18nMessagesById {\n  // xtb to xml nodes\n  const xtbParser = new XtbParser();\n  const {msgIdToHtml, errors: parseErrors} = xtbParser.parse(content);\n\n  if (parseErrors.length) {\n    throw new Error(`xtb parse errors:\\n${parseErrors.join(\"\\n\")}`);\n  }\n\n  // xml nodes to i18n nodes\n  const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n  const converter = new XmlToI18n();\n\n  // Because we should be able to load xtb files that rely on features not supported by angular,\n  // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n  // converted\n  Object.keys(msgIdToHtml).forEach(msgId => {\n    const valueFn = () => {\n      const {i18nNodes, errors} = converter.convert(msgIdToHtml[msgId]);\n      if (errors.length) {\n        throw new Error(`xtb parse errors:\\n${errors.join(\"\\n\")}`);\n      }\n      return i18nNodes;\n    };\n    createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n  });\n\n  return i18nNodesByMsgId;\n}\n\nexport const xtbDigest = digest;\n\nexport const xtbMapper = xmbMapper;\n\nfunction createLazyProperty(messages: any, id: string, valueFn: () => any) {\n  Object.defineProperty(messages, id, {\n    configurable: true,\n    enumerable: true,\n    get: () => {\n      const value = valueFn();\n      Object.defineProperty(messages, id, {enumerable: true, value});\n      return value;\n    },\n    set: _ => {\n      throw new Error(\"Could not overwrite an XTB translation\");\n    }\n  });\n}\n\n// Extract messages as xml nodes from the xtb file\nclass XtbParser implements ml.Visitor {\n  private _bundleDepth: number;\n  private _errors: I18nError[];\n  private _msgIdToHtml: {[msgId: string]: string};\n\n  parse(xtb: string) {\n    this._bundleDepth = 0;\n    this._msgIdToHtml = {};\n\n    // We can not parse the ICU messages at this point as some messages might not originate\n    // from Angular that could not be lex'd.\n    const xml = new Parser(getXmlTagDefinition).parse(xtb, \"\", false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const idAttr = element.attrs.find(attr => attr.name === \"id\");\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            const innerTextStart = element.startSourceSpan!.end.offset;\n            const innerTextEnd = element.endSourceSpan!.start.offset;\n            const content = element.startSourceSpan!.start.file.content;\n            const innerText = content.slice(innerTextStart!, innerTextEnd!);\n            this._msgIdToHtml[id] = innerText;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, \"Unexpected tag\");\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan!, message));\n  }\n}\n\n// Convert ml nodes (xtb syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  private _errors: I18nError[];\n\n  convert(message: string) {\n    const xmlIcu = new Parser(getXmlTagDefinition).parse(message, \"\", true);\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes =\n      this._errors.length > 0 || xmlIcu.rootNodes.length === 0 ? [] : ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes,\n      errors: this._errors\n    };\n  }\n\n  visitText(text: ml.Text, context: any) {\n    return new i18n.Text(text.value, text.sourceSpan!);\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression)\n    };\n  }\n\n  visitElement(el: ml.Element, context: any): i18n.Placeholder | null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const nameAttr = el.attrs.find(attr => attr.name === \"name\");\n      if (nameAttr) {\n        return new i18n.Placeholder(\"\", nameAttr.value, el.sourceSpan!);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan!, message));\n  }\n}\n"]}