{"version":3,"file":"xml_tags.js","sourceRoot":"","sources":["../../../lib/src/ast/xml_tags.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,iCAAqD;AAErD;IAAA;QACE,mBAAc,GAAG,KAAK,CAAC;QAIvB,gBAAW,GAAmB,qBAAc,CAAC,aAAa,CAAC;QAC3D,WAAM,GAAG,KAAK,CAAC;QACf,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,IAAI,CAAC;IAStB,CAAC;IAPC,kBAAkB,CAAC,aAAqB;QACtC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;CACF;AAjBD,4CAiBC;AAED,MAAM,eAAe,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAE/C,6BAAoC,OAAe;IACjD,MAAM,CAAC,eAAe,CAAC;AACzB,CAAC;AAFD,kDAEC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from \"./tags\";\n\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid = false;\n  ignoreFirstLf = false;\n  canSelfClose = true;\n\n  requireExtraParent(currentParent: string): boolean {\n    return false;\n  }\n\n  isClosedByChild(name: string): boolean {\n    return false;\n  }\n}\n\nconst _TAG_DEFINITION = new XmlTagDefinition();\n\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n"]}