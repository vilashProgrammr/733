{"version":3,"sources":["ng://@ismaestro/ngx-example-library/lib/ngx-example-library.service.ts","ng://@ismaestro/ngx-example-library/lib/ngx-example-library.component.ts","ng://@ismaestro/ngx-example-library/lib/ngx-example-library.module.ts"],"names":["NgxExampleLibraryService","Injectable","args","providedIn","moment","moment_","NgxExampleLibraryComponent","prototype","ngOnInit","this","date","format","Component","selector","template","styles","OPTIONS","InjectionToken","initialize","options","console","log","NgxExampleLibraryModule","forRoot","ngModule","providers","provide","useValue","APP_INITIALIZER","useFactory","deps","multi","NgModule","imports","declarations","exports"],"mappings":"yWAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCGMC,EAASC,eAUb,SAAAC,YAGAA,EAAAC,UAAAC,SAAA,WACEC,KAAKC,KAAON,IAASO,OAAO,8CAZ/BC,EAAAA,UAASV,KAAA,CAAC,CACTW,SAAU,0BACVC,SAAU,wBACVC,OAAQ,kDCJGC,EAAU,IAAIC,EAAAA,eAAuB,WAMlD,SAAAC,EAA2BC,GAEzB,OADAC,QAAQC,IAAI,kDAAmDF,GACxD,mDAeAG,EAAAC,QAAP,SAAeJ,GACb,MAAO,CACLK,SAAUF,EACVG,UAAW,CACT,CAACC,QAASV,EAASW,SAAUR,GAC7B,CACEO,QAASE,EAAAA,gBACTC,WAAYX,EACZY,KAAM,CAACd,GACPe,OAAO,GAET/B,yBAtBPgC,EAAAA,SAAQ9B,KAAA,CAAC,CACR+B,QAAS,GAETC,aAAc,CACZ5B,GAEF6B,QAAS,CACP7B","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxExampleLibraryService {\n\n  constructor() {\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'lib-ngx-example-library',\n  template: `<span>{{date}}</span>`,\n  styles: []\n})\nexport class NgxExampleLibraryComponent implements OnInit {\n  date: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.date = moment().format('dddd, D MMMM, YYYY LT');\n  }\n}\n","import {APP_INITIALIZER, InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\nimport {NgxExampleLibraryComponent} from './ngx-example-library.component';\nimport {NgxExampleLibraryService} from './ngx-example-library.service';\n\nexport const OPTIONS = new InjectionToken<string>('OPTIONS');\n\nexport interface SampleModuleOptions {\n  config: {};\n}\n\nexport function initialize(options: any) {\n  console.log('Angular library has started with this options: ', options);\n  return function () {\n  };\n}\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    NgxExampleLibraryComponent\n  ],\n  exports: [\n    NgxExampleLibraryComponent\n  ]\n})\nexport class NgxExampleLibraryModule {\n  static forRoot(options?: SampleModuleOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxExampleLibraryModule,\n      providers: [\n        {provide: OPTIONS, useValue: options},\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initialize,\n          deps: [OPTIONS],\n          multi: true\n        },\n        NgxExampleLibraryService\n      ]\n    };\n  }\n}\n"]}